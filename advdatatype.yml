student: !!seq # a student has sequence kind of data 
  - marks
  - name 
  - roll_no


# or we can show them like this also --
cities: [new delhi, mumbai]

#some of the keyes of the sequence will be empty -> known as sparse sequence
sparse seq:
  - hey
  - how
  - 
  - Null
  - sup
---
#NESTED SEQUENCES
-
  - mango
  - apple 
  - banana
-
  - marks
  - roll num
  - date
---

# NESTED MAPS -- MAPS WITHIN A MAP
name: Arunesh
role: # niche wala nest bana sakta hai tu ya to fir -- role: {age: 24, job: DevOps Engineer} ... aise bhi likh sakta hai tu
  age: 24
  job: DevOps Engineer
---

# We can also add pairs in map
pair example: !!pairs
  - job: DevOps Engineer
  - job: Shayar
--- #this will be an array of hashtables

## ^^^ above example is same as 
pair examples: !!pairs [job: DevOps Engineer, job: Shayar]


## implementing sets -- allows us to have unique values
names: 
  ? Kunal
  ? Arunesh
  ? Rahul

## Implementing Dictionary
people: !!omap
  - Arunesh:
    - name: Arunesh Prasad
    - age: 78
    - height: 173
  - Kunal:
    - name: Rahul OP
    - age: 24
    - height: 180
---

# Reusing (Copying) some properties (some attributes of a person) using *Anchors* [What do you want to copy and where do you want to copy?]
likings_of_a_person: &likes
  - fav_fruit: mango
  - dislikes: grapes

person0:   
  name: Kunal Kushwaha
  <<: *likes

person1: 
  name: Arunesh Prasad
  <<: *likes
  dislikes: berries       # overwrites dislikes: grapes with dislikes: berries

person2: 
  name: Rahul Singh  
  fav_fruit: mango
  dislikes: grapes







